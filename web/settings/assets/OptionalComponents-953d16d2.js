import{_ as k,C as $}from"./index-ce01b59e.js";import{_ as C}from"./dynamic-import-helper-be004503.js";import{l as V,R as S,S as O,F as z}from"./vendor-fortawesome-516e0688.js";import{_ as h,p as l,k as s,l as u,y as c,L as o,u as i,x as f,A as n,q as r,a0 as F,a1 as q,G as L,z as y}from"./vendor-9bfbb89c.js";import"./vendor-bootstrap-22b23367.js";import"./vendor-jquery-5e7aea54.js";import"./vendor-axios-7e71c841.js";import"./vendor-sortablejs-8518b3e5.js";const R={name:"DisplayThemeFallback",emits:["update:configuration"],props:{displayTheme:{type:Object,required:!0}},methods:{updateConfiguration(e,t=void 0){this.$emit("update:configuration",{value:e,object:t})}}},x={class:"display-theme-fallback"},A={key:1};function I(e,t,p,g,v,m){const d=l("openwb-base-alert"),b=l("openwb-base-textarea");return s(),u("div",x,[Object.keys(p.displayTheme.configuration).length==0?(s(),c(d,{key:0,subtype:"info"},{default:o(()=>[i(' Das Display-Theme "'+f(p.displayTheme.name)+'" bietet keine Einstellungen. ',1)]),_:1})):(s(),u("div",A,[n(d,{subtype:"warning"},{default:o(()=>[i(' Es wurde keine Konfigurationsseite für das Display-Theme "'+f(p.displayTheme.name)+'" gefunden. Die Einstellungen können als JSON direkt bearbeitet werden. ',1)]),_:1}),n(b,{title:"Konfiguration",subtype:"json","model-value":p.displayTheme.configuration,"onUpdate:modelValue":t[0]||(t[0]=_=>m.updateConfiguration(_,"configuration"))},{help:o(()=>[i(" Bitte prüfen Sie, ob die Eingaben richtig interpretiert werden. ")]),_:1},8,["model-value"]),n(d,{subtype:"info"},{default:o(()=>[r("pre",null,f(JSON.stringify(p.displayTheme.configuration,void 0,2)),1)]),_:1})]))])}const E=h(R,[["render",I],["__file","/opt/openWB-dev/openwb-ui-settings/src/components/display_themes/OpenwbDisplayThemeFallback.vue"]]);V.add(S,O);const N={name:"OpenwbDisplayThemeProxy",emits:["update:configuration"],props:{displayTheme:{type:Object,required:!0}},components:{FontAwesomeIcon:z},computed:{myComponent(){return console.debug(`loading display theme: ${this.displayTheme.type}`),F({loader:()=>C(Object.assign({"./cards/displayTheme.vue":()=>k(()=>import("./displayTheme-ae1669eb.js"),["assets/displayTheme-ae1669eb.js","assets/vendor-9bfbb89c.js","assets/vendor-sortablejs-8518b3e5.js","assets/vendor-941e092d.css"])}),`./${this.displayTheme.type}/displayTheme.vue`),errorComponent:E})}},methods:{updateConfiguration(e){this.$emit("update:configuration",e)}}};function M(e,t,p,g,v,m){const d=l("font-awesome-icon"),b=l("openwb-base-alert");return s(),u(L,null,[p.displayTheme.official?(s(),c(b,{key:0,subtype:"success"},{default:o(()=>[n(d,{"fixed-width":"",icon:["fas","certificate"]}),i(" Das ausgewählte Theme wird von openWB gepflegt. ")]),_:1})):(s(),c(b,{key:1,subtype:"info"},{default:o(()=>[n(d,{"fixed-width":"",icon:["fas","people-group"]}),i(" Das ausgewählte Theme wird in unserer Community gepflegt. Rückfragen oder Probleme bitte im Forum diskutieren. ")]),_:1})),(s(),c(q(m.myComponent),{displayTheme:p.displayTheme,"onUpdate:configuration":t[0]||(t[0]=_=>m.updateConfiguration(_))},null,40,["displayTheme"]))],64)}const j=h(N,[["render",M],["__file","/opt/openWB-dev/openwb-ui-settings/src/components/display_themes/OpenwbDisplayThemeProxy.vue"]]),P={name:"OpenwbOptionalComponents",mixins:[$],components:{OpenwbDisplayThemeProxy:j},data(){return{mqttTopicsToSubscribe:["openWB/general/extern","openWB/optional/rfid/active","openWB/optional/led/active","ToDo/optional/led/instant_blocked","ToDo/optional/led/pv_blocked","ToDo/optional/led/scheduled_blocked","ToDo/optional/led/standby_blocked","ToDo/optional/led/stop_blocked","ToDo/optional/led/instant","ToDo/optional/led/pv","ToDo/optional/led/scheduled","ToDo/optional/led/standby","ToDo/optional/led/stop","openWB/optional/int_display/active","openWB/optional/int_display/standby","openWB/optional/int_display/rotation","openWB/optional/int_display/on_if_plugged_in","openWB/optional/int_display/pin_active","openWB/optional/int_display/pin_code","openWB/optional/int_display/theme","openWB/optional/int_display/only_local_charge_points","openWB/system/configurable/display_themes","openWB/optional/et/active","openWB/optional/et/config/provider","openWB/optional/et/config/max_price"]}},computed:{displayThemeList:{get(){return this.$store.state.mqtt["openWB/system/configurable/display_themes"]}},displayThemeGroupList:{get(){let e=[{label:"openWB",options:[]},{label:"Community",options:[]}];return this.displayThemeList.forEach(t=>{t.official===!0?e[0].options.push(t):e[1].options.push(t)}),e}}},methods:{getDisplayThemeDefaults(e){const t=this.displayThemeList.find(p=>p.value==e);return Object.prototype.hasOwnProperty.call(t,"defaults")?{...JSON.parse(JSON.stringify(t.defaults))}:(console.warn("no default configuration found for display theme type!",e),{})},updateSelectedDisplayTheme(e){this.updateState("openWB/optional/int_display/theme",this.getDisplayThemeDefaults(e))},updateConfiguration(e,t){console.debug("updateConfiguration",e,t),this.updateState(e,t.value,t.object)}}},U={class:"optionalComponents"},H={name:"optionalComponentsForm"},J={key:0},G=r("br",null,null,-1),K=r("br",null,null,-1),Z=["innerHTML"],Q={key:0},X=r("br",null,null,-1),Y=r("hr",null,null,-1),ee={key:1},te=r("hr",null,null,-1),ne={key:2},oe=r("hr",null,null,-1),ae=r("hr",null,null,-1),ie={key:0};function se(e,t,p,g,v,m){const d=l("openwb-base-button-group-input"),b=l("openwb-base-alert"),_=l("openwb-base-card"),w=l("openwb-base-heading"),D=l("openwb-base-range-input"),T=l("openwb-base-select-input"),B=l("openwb-display-theme-proxy"),W=l("openwb-base-submit-buttons");return s(),u("div",U,[r("form",H,[n(_,{title:"RFID"},{default:o(()=>[n(d,{title:"RFID aktivieren","model-value":e.$store.state.mqtt["openWB/optional/rfid/active"],"onUpdate:modelValue":t[0]||(t[0]=a=>e.updateState("openWB/optional/rfid/active",a)),buttons:[{buttonValue:!1,text:"Aus",class:"btn-outline-danger"},{buttonValue:!0,text:"An",class:"btn-outline-success"}]},{help:o(()=>[i(" Dies bedingt das Vorhandensein eines RFID-Readers in deiner openWB. Bitte prüfe zuerst die Hardwareausstattung deiner openWB (z.B. Lieferschein). ")]),_:1},8,["model-value"]),e.$store.state.mqtt["openWB/optional/rfid/active"]===!0?(s(),u("div",J,[n(b,{subtype:"info"},{default:o(()=>[i(" Die RFID-Tags, die an dem jeweiligen Ladepunkt gültig sind, müssen in dem Ladepunkt-Profil hinterlegt werden. Der RFID-Tag muss in den Einstellungen des Fahrzeugs diesem zugeordnet werden."),G,i(" Es kann zuerst angesteckt und dann der RFID-Tag gescannt werden oder zuerst der RFID-Tag gescannt werden. Dann muss innerhalb von 5 Minuten ein Auto angesteckt werden, sonst wird der RFID-Tag verworfen. Das Auto wird erst nach dem Anstecken zugeordnet."),K,r("span",{innerHTML:e.$store.state.text.rfidWiki},null,8,Z)]),_:1})])):y("",!0)]),_:1}),n(_,{title:"Display (intern oder extern)"},{default:o(()=>[n(d,{title:"Integriertes Display","model-value":e.$store.state.mqtt["openWB/optional/int_display/active"],"onUpdate:modelValue":t[1]||(t[1]=a=>e.updateState("openWB/optional/int_display/active",a)),buttons:[{buttonValue:!1,text:"Nein",class:"btn-outline-danger"},{buttonValue:!0,text:"Ja",class:"btn-outline-success"}]},{help:o(()=>[i(' Je nach Bestellung kann die openWB mit oder ohne Display geliefert worden sein. Auch die Variante "Standalone" bietet beide Optionen. Bitte prüfe zuerst die Hardwareausstattung deiner openWB (z.B. Lieferschein). ')]),_:1},8,["model-value"]),e.$store.state.mqtt["openWB/optional/int_display/active"]==!0?(s(),u("div",Q,[n(d,{title:"Orientierung","model-value":e.$store.state.mqtt["openWB/optional/int_display/rotation"],"onUpdate:modelValue":t[2]||(t[2]=a=>e.updateState("openWB/optional/int_display/rotation",a)),buttons:[{buttonValue:0,text:"0°"},{buttonValue:90,text:"90°"},{buttonValue:180,text:"180°"},{buttonValue:270,text:"270°"}]},{help:o(()=>[i(" Mit dieser Einstellung kann das Display im Uhrzeigersinn gedreht werden, falls erforderlich. Nach einer Änderung ist ein Neustart erforderlich!"),X,i(" Diese Einstellung erfordert ein Raspberry Pi Display. Anzeigen, welche über HDMI angeschlossen sind, werden nicht unterstützt. ")]),_:1},8,["model-value"]),Y,n(w,null,{default:o(()=>[i(" Display Standby ")]),_:1}),n(D,{title:"Ausschaltzeit",min:0,max:12,step:1,"model-value":e.$store.state.mqtt["openWB/optional/int_display/standby"],"onUpdate:modelValue":t[3]||(t[3]=a=>e.updateState("openWB/optional/int_display/standby",a)),unit:"Sek",labels:[{label:"Immer an",value:0},{label:5,value:5},{label:10,value:10},{label:15,value:15},{label:30,value:30},{label:45,value:45},{label:"1 Min",value:60},{label:"1,5 Min",value:90},{label:"2 Min",value:120},{label:"3 Min",value:180},{label:"4 Min",value:240},{label:"5 Min",value:300},{label:"10 Min",value:600}]},{help:o(()=>[i(" Hier kann eine Zeitspanne angegeben werden, nach der das Display ausgeschaltet wird. ")]),_:1},8,["model-value"])])):y("",!0),e.$store.state.mqtt["openWB/general/extern"]===!0?(s(),u("div",ee,[te,n(b,{subtype:"info"},{default:o(()=>[i(' Weitere Einstellungen sind nicht verfügbar, solange sich diese openWB im Steuerungsmodus "secondary" befindet. ')]),_:1})])):(s(),u("div",ne,[oe,n(d,{title:"Ladepunkte auf externen openWB","model-value":e.$store.state.mqtt["openWB/optional/int_display/only_local_charge_points"],"onUpdate:modelValue":t[4]||(t[4]=a=>e.updateState("openWB/optional/int_display/only_local_charge_points",a)),buttons:[{buttonValue:!1,text:"Alle",class:"btn-outline-danger"},{buttonValue:!0,text:"Nur Lokale",class:"btn-outline-success"}]},{help:o(()=>[i(" Hiermit kann festgelegt werden, ob an angebundenen externen openWB alle oder nur die jeweils lokalen Ladepunkte angezeigt werden sollen. ")]),_:1},8,["model-value"]),ae,e.$store.state.mqtt["openWB/optional/int_display/theme"]!==void 0?(s(),u("div",ie,[n(T,{class:"mb-2",title:"Theme des Displays",groups:m.displayThemeGroupList,"model-value":e.$store.state.mqtt["openWB/optional/int_display/theme"].type,"onUpdate:modelValue":t[5]||(t[5]=a=>m.updateSelectedDisplayTheme(a))},{help:o(()=>[i(" Hier können unterschiedliche Display-Anzeigen, s.g. Themes, ausgewählt werden. Die Anzahl der Themes wird sich mit zukünftigen Releases erhöhen. ")]),_:1},8,["groups","model-value"]),e.$store.state.mqtt["openWB/optional/int_display/theme"].type?(s(),c(B,{key:0,displayTheme:e.$store.state.mqtt["openWB/optional/int_display/theme"],"onUpdate:configuration":t[6]||(t[6]=a=>m.updateConfiguration("openWB/optional/int_display/theme",a))},null,8,["displayTheme"])):y("",!0)])):y("",!0)]))]),_:1}),n(W,{formName:"optionalComponentsForm",onSave:t[7]||(t[7]=a=>e.$emit("save")),onReset:t[8]||(t[8]=a=>e.$emit("reset")),onDefaults:t[9]||(t[9]=a=>e.$emit("defaults"))})])])}const ce=h(P,[["render",se],["__file","/opt/openWB-dev/openwb-ui-settings/src/views/OptionalComponents.vue"]]);export{ce as default};
